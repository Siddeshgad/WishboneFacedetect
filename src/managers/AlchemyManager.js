// Generated by CoffeeScript 1.10.0
(function() {
  var AlchemyManager, TwitterHandles, TwitterManager, models, request;

  request = require('request');

  models = require('../models');

  TwitterManager = require('./TwitterManager');

  TwitterHandles = models.twitter_handles;

  AlchemyManager = (function() {
    function AlchemyManager(app) {}

    AlchemyManager.getResult = function(posts, callback) {
      var users;
      users = [];
      return posts.forEach(function(post, index) {
        var url;
        if (post.post_data.post_id === "33359270") {
          url = 'http://gateway-a.watsonplatform.net/calls/url/URLGetRankedImageFaceTags?apikey=4525c46ca37ee1d638d9072e56625a58a42e042e&outputMode=json&knowledgeGraph=1&url=' + post.post_data.joined_image;
          return request({
            url: url,
            method: 'GET'
          }, function(error, response, body) {
            var msg, parsedData;
            if (error) {
              return callback(error);
            } else {
              parsedData = JSON.parse(body);
              if (parsedData.status === 'OK') {
                msg = post.post_data.tw_share_text;
                parsedData.imageFaces.forEach(function(author, key) {
                  if (author.identity && author.identity.disambiguated) {
                    return users.push({
                      'name': author.identity.disambiguated.name,
                      'tags': author.identity.disambiguated.subType,
                      'message': msg
                    });
                  }
                });
              }
            }
            if (posts.length !== index + 1) {
              return AlchemyManager.checkUsers(users, function(res) {
                return callback(res);
              });
            }
          });
        }
      });
    };

    AlchemyManager.checkUsers = function(users, callback) {
      var finalUsers;
      finalUsers = [];
      return users.forEach(function(user, key) {
        return TwitterHandles.find({
          where: {
            name: user.name
          }
        }).then(function(author) {
          if (author) {
            finalUsers.push({
              'screen_name': author.screen_name,
              'message': user.message
            });
            if (users.length === finalUsers.length) {
              return callback(finalUsers);
            }
          } else {
            return TwitterManager.getHandle(user.name, function(author) {
              return TwitterManager.addMetaTags(author.get('id'), user.tags, function(result) {
                finalUsers.push({
                  'screen_name': author.get('screen_name'),
                  'message': user.message
                });
                if (users.length === finalUsers.length) {
                  return callback(finalUsers);
                }
              });
            });
          }
        });
      });
    };

    return AlchemyManager;

  })();

  module.exports = AlchemyManager;

}).call(this);

//# sourceMappingURL=AlchemyManager.js.map
